" Great for those that want Unicode, but their project‚Äôs config or style guide
" does not endorse the usage. Much of the code is based on VimL code for
" concealing Haskell, Idris, and OCaml.
if !get(g:, "purescript_unicode_conceal_enable", 1) || !has("conceal") || &enc != "utf-8"
	finish
endif

" vim: set fenc=utf-8:
syntax match purescriptNiceOperator "->" conceal cchar=‚Üí
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType
syntax match purescriptNiceOperator "<-" conceal cchar=‚Üê
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType
syntax match purescriptNiceOperator "=>" conceal cchar=‚áí
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType
syntax match purescriptNiceOperator "<=\ze[^<]" conceal cchar=‚áê
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType
syntax match purescriptNiceOperator "::" conceal cchar=‚à∑
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType
syntax keyword purescriptNiceOperator forall conceal cchar=‚àÄ
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType
syntax keyword purescriptNiceOperator exists conceal cchar=‚àÉ
	\ containedin=purescriptTypeExport,purescriptConstructorDecl,purescriptClassDecl,purescriptFunctionDecl,purescriptData,purescriptNewtype,purescriptTypeAlias,purescriptOperatorType

if !get(g:, "purescript_unicode_conceal_disable_common", 0)
	syntax match purescriptNiceOperator "\\\ze[[:alpha:][:space:]_([]" conceal cchar=Œª
	syntax match purescriptNiceOperator "\~>" conceal cchar=‚Üù
	syntax match purescriptNiceOperator "<<<" conceal cchar=‚àò
	syntax match purescriptNiceOperator "==" conceal cchar=‚â°
	syntax match purescriptNiceOperator "/=" conceal cchar=‚â†
	" deals with Kliesli operator false positives
	syntax match purescriptNiceOperator "<=\ze[^<]" conceal cchar=‚â§
	syntax match purescriptNiceOperator ">=\ze[^>]" conceal cchar=‚â•
endif

" These have a general meaning in mathematics; nothing in this block should be
" for ‚Äòfun‚Äô or ‚Äòcute‚Äô. Perhaps that‚Äôs more suited for a new block or extension‚Ä¶
if get(g:, "purescript_unicode_conceal_enable_discretionary", 0)
	syntax match purescriptNiceOperator "\<sum\>" conceal cchar=‚àë
	syntax match purescriptNiceOperator "\<product\>" conceal cchar=‚àè
	syntax match purescriptNiceOperator "\<sqrt\>" conceal cchar=‚àö
	syntax match purescriptNiceOperator "\<not\>" conceal cchar=¬¨
	syntax match purescriptNiceOperator "||\ze[[:alpha:][:space:]_([]" conceal cchar=‚à®
	syntax match purescriptNiceOperator "&&\ze[[:alpha:][:space:]_([]" conceal cchar=‚àß
	syntax match purescriptNiceOperator "`elem`" conceal cchar=‚àà
	syntax match purescriptNiceOperator "`notElem`" conceal cchar=‚àâ
	syntax match purescriptNiceOperator "`union`" conceal cchar=‚à™
	syntax match purescriptNiceOperator "`intersect`" conceal cchar=‚à©
	syntax match purescriptNiceOperator "\<infinity\>" conceal cchar=‚àû
	syntax match purescriptNiceIdentifier "\<pi\>" conceal cchar=œÄ
	syntax match purescriptNiceIdentifier "\<tau\>" conceal cchar=œÑ
	syntax match purescriptNiceIdentifier "\<empty\>" conceal cchar=‚àÖ
	syntax match purescriptNiceIdentifier "\<zero\>" conceal cchar=‚àÖ
	syntax match purescriptNiceType "\<Boolean\>" conceal cchar=ùîπ
		\ containedin=purescriptType
	syntax match purescriptNiceType "\<Int\>"  conceal cchar=‚Ñ§
		\ containedin=purescriptType
	syntax match purescriptNiceType "\<Natural\>"  conceal cchar=‚Ñï
		\ containedin=purescriptType
	syntax match purescriptNiceType "\<Void\>"  conceal cchar=‚ä•
		\ containedin=purescriptType
	" TODO: conceal primes with ‚Ä≤, ‚Ä≥, ‚Ä¥, ‚Åó
endif

highlight link purescriptNiceIdentifier Identifier
highlight! link Conceal Identifier
highlight link purescriptNiceType Type
highlight! link Conceal Type
highlight link  purescriptNiceOperator Operator
highlight! link Conceal Operator

setlocal conceallevel=2
